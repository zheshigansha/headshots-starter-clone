import { createMiddlewareClient } from '@supabase/auth-helpers-nextjs'
import { NextResponse } from 'next/server'

import type { NextRequest } from 'next/server'
import { Database } from './types/supabase'

export async function middleware(req: NextRequest) {
  // 临时禁用Supabase检查，避免超时
  return NextResponse.next()
  
  /* 原来的代码 - 等Supabase配置修复后再启用
  const res = NextResponse.next()
  const supabase = createMiddlewareClient<Database>({ req, res })
  const {
    data: { session },
  } = await supabase.auth.getSession()

  // if user is signed in and the current path is /login, redirect to /overview
  if (session && req.nextUrl.pathname.startsWith('/login')) {
    return NextResponse.redirect(new URL('/overview', req.url))
  }

  // if user is not signed in and the current path is /overview, redirect to /login
  if (!session && req.nextUrl.pathname.startsWith('/overview')) {
    return NextResponse.redirect(new URL('/login', req.url))
  }

  return res
  */
}

export const config = {
  matcher: ['/overview/:path*', '/login'],
}